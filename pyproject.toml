[project]
name = "predict_genotype"
version = "0.1.0"
description = "Measles N450 Genotyping Predictions from FASTQ data"
readme = "README.md"
license = "MIT"
license-files = ["LICEN[CS]E*"]


authors = [
    { name="Darian Hole", email="darian.hole@phac-aspc.gc.ca" }
]
keywords = ["measles", "genotyping", "genotype", "n450", "fastq"]


requires-python = ">=3.10,<=3.14"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux"
]


[project.urls]
"Homepage" = "https://github.com/PHAC-NMLB-COG"
"Documentation" = "https://github.com/PHAC-NMLB-COG"


[project.scripts]
predict_genotype = "predict_genotype.predict:main"


[build-system]
requires = ["setuptools>=78.0.2"]
build-backend = "setuptools.build_meta"


# Setuptools settings
[tool.setuptools]
platforms = ["Linux"]
include-package-data = true
zip-safe = true

# https://setuptools.pypa.io/en/latest/userguide/datafiles.html
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
predict_genotype = ["reference_data/measles_N450_genotypes.mmi"]


[project.optional-dependencies]
dev = [
    "pre-commit",
    "ruff",
    "pytest",
    "tomli"
]

[tool.ruff]
line-length = 99
indent-width = 4
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = ["E", "F", "I"]

ignore = ["F401", "E501"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.pytest.ini_options]
testpaths = "tests"  # directory containing your tests
norecursedirs = [
    ".vscode",
    "__pycache__"
]
